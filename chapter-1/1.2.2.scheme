(define (fib n)
  (cond ((= n 0) 0)
        ((= n 1) 1)
        (else (+ (fib (- n 1))
                 (fib (- n 2))))))
;; プロセスは入力に伴い指数関数的に増加するステップ数が必要。
;; 一方で要求される記憶域は入力に対し線形にしか増加しない。
;; 計算過程の任意のポイントにおいて、木の中のどのノードが☝にあるかのみ追跡する必要があるから。
;; 一般的に、木再帰プロセスにおいて必要とされるステップ数は、木の中のノードの数に比例する。
;; 必要とされる記憶域は木の最大の深さに対して比例する。



(define (fib n)
  (fib-iter 1 0 n))

(define (fib-iter a b count)
  (if (= count 0)
      b
      (fib-iter (+ a b) a (- count 1))))
