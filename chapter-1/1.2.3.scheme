; order of growth(増加のオーダー)
; 違いを説明する: 入力が大きくなるにs互い、プロセスが要求するリソース(資源)の総体的量を得ること。

; nが問題サイズを測るパラメータ、R(n)をサイズnの問題に対しプロセスが要求するリソースの量
; 前節ではnを与えられた関数が難解計算されるかの数とした。
; 他の可能性もある。
; 例えば、平方根の近日を求めることであれば、nを必要な精度の桁数と取ることもありえる。
; R(n)が使用される内部保管レジスタの数を量ったり、実行された基本的機械語命令の数であったりなど。

; もし任意の充分に大きなnの値に対して性の定数k1とk2がnに独立して存在し k1f(n) < R(n) < k2f(n)を満たす時、
; R(n)は増加のオーダーを持ち、R(n) = θ(fn)記述される。
; 例として、会場を求める線形再帰プロセスではステップ数は入力nに比例する。
; 従ってこのプロセスに必要なステップ数はθ(n)に従い増加する。
; 必要とされる記憶域もまたθ(n)に従い増加する。

; 反復式階乗ではステップ数はまだθ(n)だが、記憶域はθ(1)-定数。
; 木再帰フィボナッチ演算はθ(φ)ステップと記憶域θ(n)を必要とする。
; この時φは黄金比

; 増加のオーダーはプロセスの行いについて概観的な説明のみを与える。
; 例えばn2ステップ、100n2ステップ 3n2 + 10n + 17ステップを必要とするプロセスは全て増加のオーダーはθ(n2)になる。
; 一方で増加のオーダーは問題のサイズを変更した場合にどの程度プロセスの挙動が変化するかを推測するのに実用的な指標
; θ(n)の線形プロセスに対しサイズを2倍にした場合、概ね2倍のリソースを使用する。
; 指数関数的プロセスに対しては問題サイズを1増やす度、定数因子をリソース使用率にかけることになる。
