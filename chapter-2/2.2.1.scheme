2.2.1 列の表現

ペアを用いて構築可能な便利な構造のひとつがsequence(列) -> 順に並べたデータオブジェクトの集合

列 1, 2, 3, 4がペアの連鎖として表されている。

各ペアのcarは鎖内で早退するアイテムであり、各ペアのcdrは鎖内での次のペア。

最後のペアのcdrは列の終端をペアではないことを識別する値を指し示すことで合図する。

(cons 1
      (cons 2
            (cons 3
                  (cons 4 nil))))


そのようなペアの列は入れ子のconsにて形成され、listと呼ばれる。
そしてSchemeはlistと呼ばれるプリミティブを提供し、リストの構築を手助けする。

上の例は(list 1 2 3 4)により生成可能。

(list <a1> <a2> <a3> <a4>) ; consの入れ子と同等




Lispは慣習としてリストをカッコで括られた要素の列を表示することで表す。
したがって、データオブジェクトは(1 2 3 4)のように表示される。

(define one-through-four (list 1 2 3 4))
(1 2 3 4)

式(list 1 2 3 4)とリスト(1 2 3 4)を取り違えないように注意。
リストは式が評価された時に得られた結果。


