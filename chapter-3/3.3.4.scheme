3.3.4 デジタル回路のシミュレータ

(define a (make-wire))
(define b (make-wire))
(define c (make-wire))
(define d (make-wire))
(define e (make-wire))
(define s (make-wire))

ある関数箱を回路の集合に対してその種類の箱を構築する手つきを呼ぶことにより取り付けることができます。
コンストラクタ手続きへの引数は箱に取り付けられる回路。
例えばANDゲート、ORゲート、逆変換器を構築出来る場合、半加算器を配線することができる。

(or-gate a b d)
ok
(and-gate a b c)
ok
(inverter c e)
ok
(and-gate d e s)
ok

もっと良いことには、半加算器に取り付けられる4つの外部回路を与えられた時、
この回路を構築する手続きhalf-adderを定義することでこの操作に明示的に名前をつけることができる。

(define (half-adder a b s c)
  (let ((d (make-wire) (e (make-wire)))
        (or-gate a b d)
        (and-gate a b c)
        (inverter c e)
        (and-gate d e s)
        'ok)))

この定義を作ることの利点はhalf-adderそれ自身をより複雑な回路を作成するときに建築用ブロックとして使用することができること。

(define (full-adder a b c-in sum c-out)
  (let ((s (make-wire)) (c1 (make-wire)) (c2 (make-wire)))
    (half-adder b c-in s c1)
    (hald-adder a s sum c2)
    (or-gate c1 c2 c-out)
    'ok))

