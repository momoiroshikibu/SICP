3.4.2 並行性制御のための仕組み

並行プロセスの取り扱いにおける困難は異なるプロセスのイベント順の交互配置について考える必要性に原因があることを学んだ。
例えば2つのプロセスがあり、1つは3つの順序付けられたイベント(a,b,c)で、もう一つは3つの順序付けられたイベント(x,y,z)であるとする。
もし2つのプロセスが、それらの実行がどのように相互配置されるのかについて制約無しで並列に実行された時、2つのプロセスのここの順は変わらないとしても、20の異なる起こりえるイベントの順が存在する。

プログラマがこのシステムを設計するにつれ、これらの30種の順序のそれぞれの結果について考慮して、各振る舞いが受け入れられるか確認する必要がある。
そのような取り組み方はプロセスとイベントの数が増加するに釣れ、急速に手におえないものとなる。
並行システムの設計に対するより現実的なアプローチはプログラムの振舞が正しいことを確認できるよう並行プロセスのインターリーブを成約できる一般的な仕組みを工夫すること。多くの仕組みがこの目的のために開発されてきた。serializer(並列直列変換器)

